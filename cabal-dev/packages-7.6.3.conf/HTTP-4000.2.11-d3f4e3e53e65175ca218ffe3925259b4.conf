name: HTTP
version: 4000.2.11
id: HTTP-4000.2.11-d3f4e3e53e65175ca218ffe3925259b4
license: BSD3
copyright:
maintainer: Ganesh Sittampalam <http@projects.haskell.org>
stability:
homepage: https://github.com/haskell/HTTP
package-url:
synopsis: A library for client-side HTTP
description: The HTTP package supports client-side web programming in Haskell. It lets you set up
             HTTP connections, transmitting requests and processing the responses coming back, all
             from within the comforts of Haskell. It's dependent on the network package to operate,
             but other than that, the implementation is all written in Haskell.
             .
             A basic API for issuing single HTTP requests + receiving responses is provided. On top
             of that, a session-level abstraction is also on offer  (the @BrowserAction@ monad);
             it taking care of handling the management of persistent connections, proxies,
             state (cookies) and authentication credentials required to handle multi-step
             interactions with a web server.
             .
             The representation of the bytes flowing across is extensible via the use of a type class,
             letting you pick the representation of requests and responses that best fits your use.
             Some pre-packaged, common instances are provided for you (@ByteString@, @String@).
             .
             Here's an example use:
             .
             >
             >    do
             >      rsp <- Network.HTTP.simpleHTTP (getRequest "http://www.haskell.org/")
             >              -- fetch document and return it (as a 'String'.)
             >      fmap (take 100) (getResponseBody rsp)
             >
             >    do
             >      (_, rsp)
             >         <- Network.Browser.browse $ do
             >               setAllowRedirects True -- handle HTTP redirects
             >               request $ getRequest "http://www.haskell.org/"
             >      return (take 100 (rspBody rsp))
category: Network
author: Warrick Gray <warrick.gray@hotmail.com>
exposed: True
exposed-modules: Network.BufferType Network.Stream
                 Network.StreamDebugger Network.StreamSocket Network.TCP
                 Network.HTTP Network.HTTP.Headers Network.HTTP.Base
                 Network.HTTP.Stream Network.HTTP.Auth Network.HTTP.Cookie
                 Network.HTTP.Proxy Network.HTTP.HandleStream Network.Browser
hidden-modules: Network.HTTP.Base64 Network.HTTP.MD5Aux
                Network.HTTP.Utils Paths_HTTP
trusted: False
import-dirs: /home/saku/project/lmdexpr.github.io/cabal-dev//lib/HTTP-4000.2.11/ghc-7.6.3
library-dirs: /home/saku/project/lmdexpr.github.io/cabal-dev//lib/HTTP-4000.2.11/ghc-7.6.3
hs-libraries: HSHTTP-4000.2.11
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: array-0.4.0.1-6380782b62ead58fec616aa07dc0e15c
         base-4.6.0.1-ced5f3d8c90960e9f372129163296e44
         bytestring-0.10.0.2-0b6617b9eb506e75e23ac8e02aca9a35
         mtl-2.1.2-735d9c92b4f214d454fb5168bb1eb6ee
         network-2.4.2.2-4bd486fb5a7fb3538c707618b8c22f8c
         old-time-1.1.0.1-978f23f270668d2fce2ccde5417e64e6
         parsec-3.1.5-68c1950bc9cee9c01ecd51377b5e32b4
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /home/saku/project/lmdexpr.github.io/cabal-dev//share/doc/HTTP-4000.2.11/html/HTTP.haddock
haddock-html: /home/saku/project/lmdexpr.github.io/cabal-dev//share/doc/HTTP-4000.2.11/html
